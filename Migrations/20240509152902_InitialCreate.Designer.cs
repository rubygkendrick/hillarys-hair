// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HillarysHair.Migrations
{
    [DbContext(typeof(HillarysHairDbContext))]
    [Migration("20240509152902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HillarysHair.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("StylistId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StylistId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 2,
                            StylistId = 1,
                            Time = new DateTime(2024, 5, 10, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 100.00m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 3,
                            StylistId = 2,
                            Time = new DateTime(2024, 5, 11, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            TotalCost = 50.00m
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.AppointmentService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("AppointmentServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 2,
                            ServiceId = 2
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Liz Earle",
                            Phone = "555-555-5555"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ruby Kendrick",
                            Phone = "123-555-4678"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nicolas Dobbratz",
                            Phone = "615-777-9999"
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 50.00m,
                            Type = "color"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 50.00m,
                            Type = "cut"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 100.00m,
                            Type = "perm"
                        },
                        new
                        {
                            Id = 4,
                            Cost = 75.00m,
                            Type = "wax"
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Stylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stylists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Jill Silberstein"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Laura Solomon"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Michael Sadler"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = false,
                            Name = "Ziona Riley"
                        });
                });

            modelBuilder.Entity("HillarysHair.Models.Appointment", b =>
                {
                    b.HasOne("HillarysHair.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HillarysHair.Models.Stylist", "Stylist")
                        .WithMany()
                        .HasForeignKey("StylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Stylist");
                });

            modelBuilder.Entity("HillarysHair.Models.AppointmentService", b =>
                {
                    b.HasOne("HillarysHair.Models.Appointment", null)
                        .WithMany("AppointmentServices")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HillarysHair.Models.Appointment", b =>
                {
                    b.Navigation("AppointmentServices");
                });
#pragma warning restore 612, 618
        }
    }
}
